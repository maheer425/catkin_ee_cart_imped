cmake_minimum_required(VERSION 2.8.3)
project(ee_cart_imped_control)
# Load catkin and all dependencies required for this package
# TODO: remove all from COMPONENTS that are not catkin packages.
find_package(catkin REQUIRED COMPONENTS geometry_msgs pr2_controller_manager pr2_controller_interface pr2_mechanism_model pluginlib actionlib actionlib_msgs realtime_tools ee_cart_imped_msgs pr2_msgs eigen)

find_package(orocos_kdl REQUIRED)

# NEED TO DO SOME MORE WORK WITH THIS 
find_package(Eigen REQUIRED)
include_directories(${EIGEN_INCLUDE_DIRS})
add_definitions(${EIGEN_DEFINITIONS})

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

# TODO: fill in what other packages will need to use this package
catkin_package(
    DEPENDS eigen orocos_kdl ee_cart_imped_msgs
    CATKIN_DEPENDS geometry_msgs pr2_controller_manager pr2_controller_interface pr2_mechanism_model pluginlib actionlib actionlib_msgs realtime_tools pr2_msgs
    INCLUDE_DIRS include ${catkin_INCLUDE_DIRS} ${ee_cart_imped_msgs_INCLUDE_DIRS}
    LIBRARIES # TODO
)

include_directories(include ${catkin_INCLUDE_DIRS} ${ee_cart_imped_msgs_INCLUDE_DIRS})

#common commands for building c++ executables and libraries
#add_library(${PROJECT_NAME} src/ee_cart_imped_control.cpp)
add_library(ee_cart_imped_control_tool src/ee_cart_imped_control_tool.cpp src/digitalFilter.cpp)
#add_library(ee_cart_imped_control_tool src/pressure_observer.cpp src/ee_cart_imped_control_tool.cpp src/acceleration_observer.cpp src/digitalFilter.cpp)
#add_library(ee_cart_imped_control_tool_mpc src/ee_cart_imped_control_tool_mpc.cpp src/#pressure_observer.cpp src/acceleration_observer.cpp src/digitalFilter.cpp)
#add_executable(mpc_cart_opt src/mpc_cart_opt.cpp)

include_directories(include ${Boost_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES})



# ensure that headers get built before their targets (might not be completely correct)
# Excluding mpc for now  
# add_dependencies(mpc_cart_opt.cpp ${catkin_EXPORTED_TARGETS})
